name: 🌱 CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  changes:
    name: 🔍 Detect changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  frontend-test:
    name: 🧪 frontend-ci
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
          cache-dependency-path: './frontend'

      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile
      
      - name: Linting check
        run: cd frontend && yarn lint
      
      - name: Type check
        run: cd frontend && yarn type-check
      
      - name: Run tests and coverage
        run: cd frontend && yarn test && yarn test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          flags: frontend
          files: ./frontend/__tests__/coverage/lcov.info
          fail_ci_if_error: true             
          verbose: true     

  backend-test:
    name: 🧪 backend-ci
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
      
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and coverage
        run: |
          cd backend
          pytest
          coverage run --source=src -m pytest -v __tests__/ && coverage report -m && coverage html && coverage xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          flags: backend
          files: ./backend/coverage.xml
          fail_ci_if_error: true             
          verbose: true     